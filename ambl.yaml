
# alias gets treated as a buildable which is just a symlink to (and depending on) the real thing
# It cannot shadow a source file (error? or warn?)
# TODO do we even need the symlink? It's probably more pure to do so.
# We could probably implement this as a builtin wasm module...
# - alias:
#     name: builder.wasm
#     path: target/debug/builder.wasm

- target:
    names: [all] # TODO `name: all` for convenience
    module: target/wasm32-unknown-unknown/debug/ambl_sample_builder.wasm
    fn: build_all

- target:
    names:
     - a
     - b
     - c
    module: target/wasm32-unknown-unknown/debug/ambl_sample_builder.wasm
    fn: build_all
    mode: WASM
    # config:
    #   length: 1

# - target:
#     ## TODO: add scope?
#     names: [target/wasm32-unknown-unknown/debug/ambl_sample_builder.wasm]
#     module: target/wasm32-unknown-unknown/debug/component/ambl_builtin_cargo.wasm
#     fn: module_build
#     config:
#       name: ambl-sample-builder

# - include:
#     path: target/wasm32-unknown-unknown/debug/component/ambl_builtin_cargo.wasm
#     # scope: cargo

# - include:
#     mode: WASM
#     module: builtin:scala
#     config:
#       x: 123

# - include:
#     mode: WASM
#     module: builtin:lint
#     scope: lint
#     config: |
#       src: ./scala

# - include:
#     mode: WASM
#     module: builtin:cargo-wasm
#     scope: builder
#     config: |
#       # NOTE: should scope change the conceptual "cwd"?
#       package: ambl-builder

# # assume a builtin module which can build a rust cargo project into wasm :thinking: ...
